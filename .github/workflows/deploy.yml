name: GKE CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TF_VERSION: "1.5.0"
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_SA_KEY: ${{ secrets.GCP_CREDENTIALS }}

jobs:

  # -----------------------------
  # Stage 1: Terraform Infra
  # -----------------------------
  terraform:
    runs-on: self-hosted
    outputs:
      cluster_name: ${{ steps.get_cluster_name.outputs.cluster_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure GCP credentials
        run: |
          printf "%s" "${GCP_SA_KEY}" > $HOME/gcp-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
          gcloud config set project $GCP_PROJECT
          gcloud config set compute/region $GCP_REGION
          gcloud config set compute/zone ${GCP_REGION}-a

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve -var="project_id=${GCP_PROJECT}" -var="region=${GCP_REGION}" -var="credentials_file=$HOME/gcp-key.json"

      - name: Get Cluster Name
        id: get_cluster_name
        run: |
          CLUSTER_NAME=$(terraform -chdir=terraform output -raw cluster_name)
          echo "cluster_name=$CLUSTER_NAME" >> $GITHUB_OUTPUT

  # -----------------------------
  # Stage 2: Deploy Application
  # -----------------------------
  deploy-app:
    runs-on: self-hosted
    needs: terraform
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure GCP credentials
        run: |
          printf "%s" "${GCP_SA_KEY}" > $HOME/gcp-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
          gcloud config set project $GCP_PROJECT
          gcloud config set compute/region $GCP_REGION
          gcloud config set compute/zone ${GCP_REGION}-a

      - name: Get GKE credentials
        run: |
          CLUSTER_NAME=${{ needs.terraform.outputs.cluster_name }}
          gcloud container clusters get-credentials $CLUSTER_NAME --region $GCP_REGION

      - name: Create Namespace
        run: kubectl create namespace demo || true

      - name: Deploy Sample App
        run: kubectl apply -n demo -f k8s/deployment.yaml

      - name: Get Service External IP
        run: |
          echo "Waiting for external IP..."
          kubectl wait --namespace demo --for=condition=available deployment/hello-app --timeout=120s
          kubectl get svc -n demo hello-service
